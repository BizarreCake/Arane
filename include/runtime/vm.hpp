/*
 * Arane - A Perl 6 interpreter.
 * Copyright (C) 2014 Jacob Zhitomirsky
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _ARANE__VM__H_
#define _ARANE__VM__H_

#include "linker/executable.hpp"
#include "runtime/value.hpp"
#include "runtime/gc.hpp"
#include <ostream>
#include <istream>
#include <stdexcept>
#include <unordered_map>


namespace arane {
  
  class vm_error: public std::runtime_error
  {
  public:
    vm_error (const std::string& str)
      : std::runtime_error (str)
      { }
  };
  
  
  /* 
   * The virtual machine.
   * Executes the bytecode generated by the compiler.
   */
  class virtual_machine
  {
    friend class garbage_collector;
    friend class builtins;
    
    p_value *stack;
    int sp;         // stack pointer
    int bp;         // base pointer
    
    std::unordered_map<std::string, p_value> globs;
    
    std::ostream *out;
    std::istream *in;
    
    garbage_collector gc;
    
  public:
    inline garbage_collector& get_gc () { return this->gc; }
    
  public:
    virtual_machine ();
    ~virtual_machine ();
    
  public:
    void set_in (std::istream *strm);
    void set_out (std::ostream *strm);
    
  public:
    /* 
     * Executes the specified executable.
     * Throws exceptions of type `vm_error' on failure.
     */
    void run (executable& exec);
  };
}

#endif

